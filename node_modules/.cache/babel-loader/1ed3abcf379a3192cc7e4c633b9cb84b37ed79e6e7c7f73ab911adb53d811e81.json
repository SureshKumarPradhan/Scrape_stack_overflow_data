{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getTagsAction } from \"../Action/Action\";\nconst initialState = {\n  Tags: {\n    data: [],\n    isLoading: false,\n    isSucess: false,\n    errorMessage: \"\"\n  },\n  report: {\n    data: {},\n    isLoading: false,\n    isSucess: false,\n    errorMessage: \"\"\n  }\n};\nexport const scrapReducer = createSlice({\n  name: \"scrapData\",\n  initialState,\n  reducers: {\n    setIsfilter: (state, action) => {\n      state.ProductListData.isFilter = action.payload;\n    }\n  },\n  extraReducers: {\n    [getTagsAction.rejected]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.Tags.isLoading = false;\n      state.Tags.isSucess = false;\n      state.Tags.ProductListData = payload;\n    },\n    [getTagsAction.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.Tags.isLoading = false;\n      state.Tags.isSucess = true;\n      state.Tags.data = payload.data.items;\n    }\n  }\n});\nexport const {\n  setIsfilter\n} = scrapReducer.actions;\nexport default scrapReducer.reducer;","map":{"version":3,"names":["createSlice","getTagsAction","initialState","Tags","data","isLoading","isSucess","errorMessage","report","scrapReducer","name","reducers","setIsfilter","state","action","ProductListData","isFilter","payload","extraReducers","rejected","_ref","fulfilled","_ref2","items","actions","reducer"],"sources":["/home/suresh/Desktop/practice/scrapedata/src/reducer/Reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { getTagsAction } from \"../Action/Action\";\nconst initialState = {\n  Tags: {\n    data: [],\n    isLoading: false,\n    isSucess: false,\n    errorMessage: \"\",\n  },\n  report: {\n    data: {},\n    isLoading: false,\n    isSucess: false,\n    errorMessage: \"\",\n  },\n};\n\nexport const scrapReducer = createSlice({\n  name: \"scrapData\",\n  initialState,\n  reducers: {\n    setIsfilter: (state, action) => {\n      state.ProductListData.isFilter = action.payload;\n    },\n  },\n  extraReducers: {\n    [getTagsAction.rejected]: (state, { payload }) => {\n      state.Tags.isLoading = false;\n      state.Tags.isSucess = false;\n      state.Tags.ProductListData = payload;\n    },\n    [getTagsAction.fulfilled]: (state, { payload }) => {\n      state.Tags.isLoading = false;\n      state.Tags.isSucess = true;\n      state.Tags.data = payload.data.items;\n    },\n  },\n});\n\nexport const { setIsfilter } = scrapReducer.actions;\n\nexport default scrapReducer.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE;IACJC,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE,KAAK;IACfC,YAAY,EAAE;EAChB,CAAC;EACDC,MAAM,EAAE;IACNJ,IAAI,EAAE,CAAC,CAAC;IACRC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE,KAAK;IACfC,YAAY,EAAE;EAChB;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAGT,WAAW,CAAC;EACtCU,IAAI,EAAE,WAAW;EACjBR,YAAY;EACZS,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACE,eAAe,CAACC,QAAQ,GAAGF,MAAM,CAACG,OAAO;IACjD;EACF,CAAC;EACDC,aAAa,EAAE;IACb,CAACjB,aAAa,CAACkB,QAAQ,GAAG,CAACN,KAAK,EAAAO,IAAA,KAAkB;MAAA,IAAhB;QAAEH;MAAQ,CAAC,GAAAG,IAAA;MAC3CP,KAAK,CAACV,IAAI,CAACE,SAAS,GAAG,KAAK;MAC5BQ,KAAK,CAACV,IAAI,CAACG,QAAQ,GAAG,KAAK;MAC3BO,KAAK,CAACV,IAAI,CAACY,eAAe,GAAGE,OAAO;IACtC,CAAC;IACD,CAAChB,aAAa,CAACoB,SAAS,GAAG,CAACR,KAAK,EAAAS,KAAA,KAAkB;MAAA,IAAhB;QAAEL;MAAQ,CAAC,GAAAK,KAAA;MAC5CT,KAAK,CAACV,IAAI,CAACE,SAAS,GAAG,KAAK;MAC5BQ,KAAK,CAACV,IAAI,CAACG,QAAQ,GAAG,IAAI;MAC1BO,KAAK,CAACV,IAAI,CAACC,IAAI,GAAGa,OAAO,CAACb,IAAI,CAACmB,KAAK;IACtC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX;AAAY,CAAC,GAAGH,YAAY,CAACe,OAAO;AAEnD,eAAef,YAAY,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}