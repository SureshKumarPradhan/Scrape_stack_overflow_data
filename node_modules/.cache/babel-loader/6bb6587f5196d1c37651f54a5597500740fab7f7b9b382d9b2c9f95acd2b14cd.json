{"ast":null,"code":"var _jsxFileName = \"/home/suresh/Desktop/practice/scrapedata/src/component/DuplicateData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DuplicateData() {\n  _s();\n  const [tags, setTags] = useState([]);\n  const [selectedTag, setSelectedTag] = useState(null);\n  const [tagData, setTagData] = useState(null);\n  const [report, setreport] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get('https://api.stackexchange.com/2.3/tags?order=desc&sort=popular&site=stackoverflow');\n      setTags(response.data.items.slice(0, 100));\n    };\n    fetchData();\n  }, []);\n  console.log(tags, \"tags\");\n  const handleTagChange = async event => {\n    let value = event.target.value;\n    setSelectedTag(value);\n    const response = await axios.get(`https://api.stackexchange.com/2.3/questions?order=desc&sort=votes&tagged=${value}&site=stackoverflow&filter=withbody`);\n    const questions = response.data.items;\n    const totalQuestions = questions.length;\n    const totalVotes = questions.reduce((total, question) => total + question.score, 0);\n    const totalViews = questions.reduce((total, question) => total + question.view_count, 0);\n    console.log({\n      questions: totalQuestions,\n      votes: totalVotes,\n      totalView: totalViews\n    }, \"responseData\");\n  };\n  const handleGenerateReport = tag => {\n    // Filter the questions based on the selected tag and programming language\n    // const filteredQuestions = 1\n    // // Calculate the total number of questions, votes, and views\n    // const totalQuestions = filteredQuestions.length;\n    // const totalVotes = 2\n    // const totalViews = 5\n    // const averageViews = totalViews / totalQuestions;\n\n    // Store the tag data in the component state\n    // setTagData({\n    //   tag: selectedTag,\n    //   totalQuestions,\n    //   totalVotes,\n    //   totalViews,\n    //   averageViews\n    // });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleTagChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Select a tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), tags.map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: tag.name,\n        children: tag.name\n      }, tag.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 26\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateReport,\n      children: \"Generate report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), tagData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Report for \", tagData.tag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total questions: \", tagData.totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total votes: \", tagData.totalVotes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total views: \", tagData.totalViews]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average views: \", tagData.averageViews]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(DuplicateData, \"SdQ3FXMzwyvFlU1+4saU1ILZcC8=\");\n_c = DuplicateData;\nexport default DuplicateData;\nvar _c;\n$RefreshReg$(_c, \"DuplicateData\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DuplicateData","_s","tags","setTags","selectedTag","setSelectedTag","tagData","setTagData","report","setreport","fetchData","response","get","data","items","slice","console","log","handleTagChange","event","value","target","questions","totalQuestions","length","totalVotes","reduce","total","question","score","totalViews","view_count","votes","totalView","handleGenerateReport","tag","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","name","onClick","averageViews","_c","$RefreshReg$"],"sources":["/home/suresh/Desktop/practice/scrapedata/src/component/DuplicateData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction DuplicateData() {\n  const [tags, setTags] = useState([]);\n  const [selectedTag, setSelectedTag] = useState(null);\n  const [tagData, setTagData] = useState(null);\n  const [report,setreport] = useState([])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get('https://api.stackexchange.com/2.3/tags?order=desc&sort=popular&site=stackoverflow');\n      setTags(response.data.items.slice(0, 100));\n    };\n    fetchData();\n  }, []);\n\n  console.log(tags,\"tags\")\n  const handleTagChange = async (event) => {\n    let value = event.target.value\n    setSelectedTag(value);\n    const response = await axios.get(`https://api.stackexchange.com/2.3/questions?order=desc&sort=votes&tagged=${value}&site=stackoverflow&filter=withbody`);\n    const questions = response.data.items;\n    const totalQuestions = questions.length;\n    const totalVotes = questions.reduce((total, question) => total + question.score, 0);\n    const totalViews = questions.reduce((total, question) => total + question.view_count, 0);\n\n    console.log({\n      questions:totalQuestions,\n      votes :totalVotes,\n      totalView:totalViews\n    },\"responseData\")\n  };\n  const handleGenerateReport = (tag) => {\n    // Filter the questions based on the selected tag and programming language\n    // const filteredQuestions = 1\n    // // Calculate the total number of questions, votes, and views\n    // const totalQuestions = filteredQuestions.length;\n    // const totalVotes = 2\n    // const totalViews = 5\n    // const averageViews = totalViews / totalQuestions;\n\n    // Store the tag data in the component state\n    // setTagData({\n    //   tag: selectedTag,\n    //   totalQuestions,\n    //   totalVotes,\n    //   totalViews,\n    //   averageViews\n    // });\n  };\n\n  return (\n    <div>\n      {/* Render the user interface for generating and viewing the reports */}\n      <select onChange={handleTagChange}>\n        <option>Select a tag</option>\n        {tags.map(tag => <option key={tag.name} value={tag.name}>{tag.name}</option>)}\n      </select>\n      <button onClick={handleGenerateReport}>Generate report</button>\n\n      {tagData && (\n        <div>\n          <h2>Report for {tagData.tag}</h2>\n          <p>Total questions: {tagData.totalQuestions}</p>\n          <p>Total votes: {tagData.totalVotes}</p>\n          <p>Total views: {tagData.totalViews}</p>\n          <p>Average views: {tagData.averageViews}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DuplicateData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}